<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="ru-RU">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <title>ch001.xhtml</title>
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
    pre > code.sourceCode { white-space: pre; position: relative; }
    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }
    pre > code.sourceCode > span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode > span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre > code.sourceCode { white-space: pre-wrap; }
    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code > span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code > span > a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  </style>
  <link rel="stylesheet" type="text/css" href="../styles/stylesheet1.css" />
</head>
<body epub:type="bodymatter">
<section id="введение" class="level1" data-number="1">
<h1 data-number="1">1. Введение</h1>
<div class="text-container text-container--module">
<p>Общие сведения о дизайн-системах. Рассмотрим разные типы и свойства дизайн-систем, разберём примеры</p>
</div>
<section id="термин-основа-всего" class="level2" data-number="1.1">
<h2 data-number="1.1">1.1. Термин — основа всего</h2>
<div class="text-container text-container--module">
<p>Работа в большом проекте подразумевает большое количество логики и интерфейсов. В какой бы момент работы вы ни подключились, интерфейсные элементы или уже начали повторяться, или начнут в ближайшем будущем.</p>
<p>Переиспользование и расширение компонентной базы (и в дизайне, и в коде) — задачи, о которых нужно подумать как можно раньше. В противном случае база станет похожа на музей капитал-шоу «Поле чудес». Так человечество пришло к идее создания <strong>UI Kit</strong>.</p>
<p>UI-кит — нерасширяемый и не имеющий системной методологии создания набор компонентов. Это просто фиксированный набор компонентов под проект.</p>
<figure>
<img src="../media/file0.png" alt="Пример из аккаунта Phil Goodwin https://dribbble.com/shots/16073758-UserWise-UI-Components" />
<figcaption aria-hidden="true">Пример из аккаунта Phil Goodwin https://dribbble.com/shots/16073758-UserWise-UI-Components</figcaption>
</figure>
<p>Представим, что появилась необходимость добавить новый компонент. Придётся придумать его самостоятельно, потому что в комплекте с UI-китом нет инструкции. А раз нет инструкции, то команды или их участники будут делать компоненты по-своему. Это приводит к проблемам консистентности в дизайне, коде и разных частях приложения или сервиса. Может влиять на опыт разработки (DX) и её скорость. Так человечество пришло к идее <strong>дизайн-систем</strong>.</p>
<figure>
<img src="../media/file1.png" alt="Наблюдение Адама Зелонко" />
<figcaption aria-hidden="true">Наблюдение Адама Зелонко</figcaption>
</figure>
<p><a href="https://adamzielonko.com/">Адам Зелонко</a> проиллюстрировал процесс развития цифровых продуктов с UI-китами и дизайн системами. Рассмотрим одинаковый темп развития цифрового продукта в разных условиях. Левый график показывает, что UI-кит полезен до определённой стадии развития продукта. В период быстрого роста продукта он теряет актуальность, формируется технический долг в дизайне или в коде (серая область на левом графике). В случае дизайн-систем компоненты в дизайне и коде идут бок о бок. Они не отстают от растущей сложности продукта и в состоянии её поддержать.</p>
<blockquote>
<p>Слово <em>«дизайн»</em> — это англицизм. На постсоветском пространстве под ним обычно понимают сферу деятельности, связанную с графикой или творчеством. Причём контекст люди дополняют на основе личного опыта: могут подумать про веб-дизайн, дизайн интерьеров, ногтей или что-нибудь ещё. Этот факт сформировал в сообществе путаницу, на которую не всегда обращают внимание. Многие называют UI-дизайн «системами», не имея реализации компонентов в коде. Это неправильно.</p>
<p>Существительное <em>design</em> переводится на русский как <em>«проектирование»</em>. Оно расшифровывается (<a href="https://dictionary.cambridge.org/ru/%D1%81%D0%BB%D0%BE%D0%B2%D0%B0%D1%80%D1%8C/%D0%B0%D0%BD%D0%B3%D0%BB%D0%B8%D0%B9%D1%81%D0%BA%D0%B8%D0%B9/design">по Кембриджскому словарю</a>) как «чертёж или набор чертежей, показывающих, как должно быть сделано здание или изделие, как оно будет работать и выглядеть. То есть дизайн-системы не только про работу дизайнера, а про проектирование и создание интерфейсов <strong>в конечном продукте</strong>, то есть и про разработку, и про разработчиков».</p>
</blockquote>
<p>Дизайн-система — это набор инструментов для создания интерфейсов, реализованный по собственным правилам и принципам. Последние позволяют органично расширять дизайн-систему, отрабатывать пограничные случаи и просто быстрее договариваться.</p>
<p>Как скелет человека определяет форму и функцию мышц, так же правила и принципы помогают наращивать объём компонентов. Есть забавная аналогия с приготовлением блюд: интерфейсные компоненты (вне контекста дизайн-системы) — просто продукты. Но если есть рецепт, в котором чётко описаны граммовки и порядок действий, то из них можно приготовить хорошее блюдо.</p>
</div>
</section>
<section id="вопросы-и-детали" class="level2" data-number="1.2">
<h2 data-number="1.2">1.2. Вопросы и детали</h2>
<div class="text-container text-container--module">
<p>Большая часть дизайн-систем строится, как матрёшка. Если разобрать компонент или блок интерфейса, он будет состоять из одного или нескольких малых элементов. Взгляд от большего к меньшему или снаружи внутрь удобен, когда вы анализируете что-то готовое. Если вы участвуете в процессе создания дизайн-системы, нужно смотреть наоборот, от меньшего к большему.</p>
<p>Популярный вариант такой «матрёшечной» методологии — <a href="https://bradfrost.com/blog/post/atomic-web-design/">Atomic Design</a>, подробнее с ним мы познакомимся в следующем разделе.</p>
<section id="классификация" class="level4" data-number="1.2.0.1">
<h4 data-number="1.2.0.1">Классификация</h4>
<p>Дизайн-системы можно разделить на два типа:</p>
<ul>
<li>для сообщества (<a href="https://ant.design/">Ant</a>, <a href="https://material.io/">Material</a>);</li>
<li>корпоративные (<a href="https://consta.gazprom-neft.ru/">Consta</a> от Газпром нефти, <a href="https://digital.alfabank.ru/designsystem">Дизайн-система Альфа банка</a>).<br />
Первые обычно используются в маленьких продуктах, где систему пока не на чем основывать или для этого нет ресурсов, а также когда это обязательное условие для встраивания в другой сервис. Вторые обслуживают экосистемы или большие цифровые продукты, разрабатываются внутри компании отдельной командой.</li>
</ul>
<figure>
<img src="../media/file2.png" alt="Страницы дизайн-систем Ant и Consta" />
<figcaption aria-hidden="true">Страницы дизайн-систем Ant и Consta</figcaption>
</figure>
<p>Дизайн-системы помогают поддерживать консистентные интерфейсы для пользователя, улучшая UX. Они существенно сокращают время на дизайн и разработку. Например, использование <a href="https://consta.gazprom-neft.ru">дизайн-системы Consta</a> сокращает время на разработку от 15% до 60% в зависимости от уникальности проекта.</p>
</section>
<section id="что-входит-в-дизайн-систему-максимальный-список" class="level4" data-number="1.2.0.2">
<h4 data-number="1.2.0.2">Что входит в дизайн систему? Максимальный список</h4>
<p>Ниже приведён максимально полный список вещей, которые должны быть у дизайн-системы:</p>
<ol type="1">
<li><strong>Общая документация</strong>.<br />
Описаны правила, принципы и методы, на которых построена дизайн-система, правила расширения системы, аналог SLA от команды создателей, описание требований по доступности и другие знания, полезные широкому кругу специалистов.</li>
</ol>
<p>Примеры:</p>
<ul>
<li><a href="https://digital.alfabank.ru/principles">общие принципы</a> дизайн-системы «Альфа-Банка»;</li>
<li><a href="https://paradigm.mail.ru/accessibility">требования доступности</a> дизайн-системы Paradigm <a href="http://Mail.ru">Mail.ru</a>;</li>
<li><a href="https://consta-uikit.vercel.app/?path=/docs/common-units--page">как сокращать единицы измерения</a> в дизайн-системе Consta «Газпром нефти»;</li>
<li><a href="https://atlassian.design/resources/atlassian-design-principles">принципы построения дизайна</a> в дизайн-системе Atlassian.</li>
</ul>
<ol start="2" type="1">
<li><strong>Компоненты в коде + витрина + документация</strong>.<br />
Компоненты, покрытые тестами, и документация только для разработчиков, например, кодстайл или как собираются SVG-файлы.</li>
</ol>
<p>Примеры:</p>
<ul>
<li><a href="https://vkcom.github.io/VKUI/#/PopoutWrapper">витрина компонентов</a> дизайн-системы «Вконтакте» VK UI;</li>
<li><a href="https://consta-uikit.vercel.app/?path=/docs/common-preview--page">витрина компонентов</a> дизайн-системы Consta «Газпром нефти»;</li>
<li><a href="https://i.semrush.com/components/accordion/">витрина компонентов</a> дизайн-системы Intergalactic Semrush;</li>
<li><a href="https://carbondesignsystem.com/components/overview/">витрина компонентов</a> дизайн-системы Carbon IBM.</li>
</ul>
<ol start="3" type="1">
<li><strong>Компоненты в дизайне + документация</strong>.<br />
Компоненты в графическом редакторе, документация по использованию только для дизайнеров, например, как на ячейках можно собрать таблицу в макетах.</li>
</ol>
<p>Примеры:</p>
<ul>
<li>дизайн-системы Consta «Газпром нефти» в <a href="https://www.figma.com/@Consta">Figma Comminity</a>;</li>
<li>дизайн-системы команды «Вконтакте» в <a href="https://www.figma.com/@vk">Figma Comminity</a>.</li>
</ul>
<ol start="4" type="1">
<li><strong>Интерфейсные паттерны</strong>.<br />
Компоненты в графическом редакторе, документация по использованию только для дизайнеров, например, как на ячейках можно собрать таблицу в макетах.</li>
</ol>
<p>Примеры:</p>
<ul>
<li><a href="https://digital.alfabank.ru/patterns/password">паттерны</a> дизайн-системы «Альфа-Банка».</li>
<li><a href="https://www.figma.com/community/file/997586644523081587/Consta-UI-Kit%3A-Best-Practices">паттерны</a> дизайн-системы Consta «Газпром нефти».</li>
</ul>
<ol start="5" type="1">
<li><strong>Документация для редакторов</strong>.<br />
Tone of voice, редполитика.</li>
</ol>
<p>Примеры:</p>
<ul>
<li>как писать <a href="https://consta-uikit.vercel.app/?path=/docs/common-develop-write-docs--page">доку для разработчиков</a> в дизайн-системе Consta «Газпром нефти»;</li>
<li><a href="https://design.mail.ru/">редполитика</a> дизайн-системы Paradigm <a href="http://Mail.ru">Mail.ru</a>;</li>
<li><a href="https://atlassian.design/content/inclusive-writing/">редполитика</a> в дизайн-системе Atlassian.</li>
</ul>
<ol start="6" type="1">
<li><strong>Правила внешней коммуникации</strong> (для открытых или частично открытых дизайн-систем).<br />
Например, как делать промо-посты и что в них должно быть.</li>
</ol>
<p>Примеры:</p>
<ul>
<li><a href="https://atlassian.design/brand">правила внешних коммуникаций</a> в дизайн-системе Atlassian;</li>
<li><a href="https://paradigm.mail.ru/communications">правила внешних коммуникаций</a> в дизайн-системе Paradigm <a href="http://Mail.ru">Mail.ru</a>.</li>
</ul>
<ol start="7" type="1">
<li><strong>Инструмент для передачи знаний из всех пунктов выше</strong>.<br />
Это может быть Notion, Confluence, Storybook, собственный веб-сайт, а также коммуникационные сессии обмена опытом, регулярные синки, каналы для оповещения об обновлениях.</li>
</ol>
<p>Примеры:</p>
<ul>
<li>портал дизайн-системы <a href="https://paradigm.mail.ru/">Paradigm</a><a href="http://Mail.ru">Mail.ru</a>;</li>
<li><a href="https://carbondesignsystem.com/whats-happening/meetups/">митапы</a> дизайн-системы Cabon IBM;</li>
<li><a href="https://consta-uikit.vercel.app/?path=/story/common-about--page">сторибук</a> дизайн-системы Consta «Газпром нефти».</li>
</ul>
<p>Список получился небольшим, но чтобы его реализовать в полной мере, нужно много времени и сил. На практике артефакты появляются последовательно, не стоит пытаться делать всё за один подход.</p>
</section>
<section id="когда-нужна-дизайн-система" class="level4" data-number="1.2.0.3">
<h4 data-number="1.2.0.3">Когда нужна дизайн-система?</h4>
<p>Крупные компании приходят к разработке своей уникальной дизайн-системы в следующих случаях.</p>
<ul>
<li>Проект больше или сложнее по бизнес логике, чем лендинг или сайт из нескольких страниц с текстом и графикой.</li>
<li>Приходит понимание, что любой UI-элемент используется во второй раз. Создавать дизайн-систему прямо на старте проекта часто бессмысленно.</li>
<li>Проект начинает разрастаться.</li>
<li>Компании хотят более быстрых изменений.</li>
<li>Для закрепления нового стека технологий при конфликте интересов.</li>
</ul>
<figure>
<img src="../media/file3.png" alt="Стабильная версия" />
<figcaption aria-hidden="true">Стабильная версия</figcaption>
</figure>
<p>Для первой стабильной версии всегда нужен набор интерфейсов, принятые правила работы в команде, выстроенные коммуникации и выбранный стек технологий. Без этого к дизайн-системам лучше не подступаться: ещё рано, придётся довольно быстро всё переделывать.</p>
</section>
<section id="кому-нужна-дизайн-система" class="level4" data-number="1.2.0.4">
<h4 data-number="1.2.0.4">Кому нужна дизайн-система?</h4>
<p>Дизайн-системы в первую очередь полезны в продуктовых командах. Здесь они закрывают повторяющиеся интерфейсные задачи, чтобы команды могли сфокусироваться на своих узких проблемах или быстро проверять гипотезы. Но и в случае пет-проекта или обучения их тоже можно использовать. Во всех ситуациях не нужно думать о том, как выглядит или работает компонент, просто берите и используйте.</p>
</section>
<section id="какие-есть-минусы" class="level4" data-number="1.2.0.5">
<h4 data-number="1.2.0.5">Какие есть минусы?</h4>
<p>У дизайн-систем есть свои недостатки.</p>
<ul>
<li>Любые доработки или новые компоненты делаются дольше. Уникальных компонентов в дизайн-системе не может быть, поэтому и ваш компонент должен соответствовать всем правилам ДС.</li>
<li>Добавляются коммуникации с держателями дизайн-системы.</li>
<li>Если дизайн-система негибкая, не получится сделать «совершенно другой, непохожий ни на что дизайн».</li>
<li>Для поддержки нужна отдельная команда. Это дорого.</li>
</ul>
</section>
</div>
</section>
<section id="разные-дизайн-системы" class="level2" data-number="1.3">
<h2 data-number="1.3">1.3. Разные дизайн-системы</h2>
<div class="text-container text-container--module">
<p>Рассмотрим три открытые дизайн-системы: Ant, Material и Consta. Они созданы в разных частях света для разных целей, у каждой свои особенности.</p>
<section id="ant-design" class="level3" data-number="1.3.1">
<h3 data-number="1.3.1"><a href="https://ant.design/">Ant Design</a></h3>
<figure>
<img src="../media/file4.png" alt="Ant Design" />
<figcaption aria-hidden="true">Ant Design</figcaption>
</figure>
<p>Ant — дизайн-система родом из Китая, которую поддерживают разработчики из Alibaba Group. Используется в интернет-магазине Alibaba, поддерживает несколько языков и все актуальные версии браузеров. Однако есть некоторые сложности с переносом на мобильные устройства: по умолчанию система рассчитана на десктопные веб-приложения. Для мобильных придётся подключать Ant Design Mobile.</p>
<p>Ant даёт огромные возможности для работы и представления данных на десктопных форматах. Здесь отлично работающие таблицы, обёртки для форм и отдельная родственная библиотека графиков.</p>
<p>Огромный плюс — документация Ant очень подробна, здесь хорошо описано API, с примерами и возможностью поиграть с компонентами в песочнице. В основном она ориентирована на разработчиков.</p>
<p>Наверное, у Ant лучшая техническая документация из всех трёх. Здесь есть раздел о дизайне, в котором описываются базовые правила — как принципы дизайна в целом, так и дизайна на Ant в частности. Есть примеры «делать/не делать» и шаблоны страниц. Огромное количество пользователей, а значит, огромное коммьюнити, с которым можно посоветоваться, если возникнет совсем необычный кейс.</p>
<p>Большой минус — нет отдельной дизайнерской библиотеки, компоненты существуют только в коде. Поэтому если на вашем проекте есть выделенный дизайнер, который должен рисовать макеты, то ему будет сложно. Есть внешние проекты, которые покрывают эту задачу, но это либо открытый код, созданный силами коммьюнити, либо платная история, которая может не синхронизироваться с планами и деятельностью команды Alibaba Group.</p>
<p>Из-за своей строгости и не самой простой стилизации компонентов тяжело пойдёт для сервисов, которым важна визуальная составляющая. Из-за отсутствия дизайн-библиотеки — для больших команд с разделением ответственности. Будет идеален для MVP-продуктов, когда нет разделения ролей дизайнера и разработчика и нужно быстро набросать рабочий вариант, или же для внутренних сервисов, которым стабильная функциональность важнее внешнего вида.</p>
</section>
<section id="material-design" class="level3" data-number="1.3.2">
<h3 data-number="1.3.2"><a href="https://material.io/">Material Design</a></h3>
<figure>
<img src="../media/file5.png" alt="Ant Design" />
<figcaption aria-hidden="true">Ant Design</figcaption>
</figure>
<p>Дизайн-система, которую создали и развивают ребята из Google. Родная для Андроида, но также может использоваться на других платформах. Поддерживается, есть версии библиотек для веба и мобильных платформ.</p>
<p>Material хорош своей адаптивностью, с ним продукт выглядит цельным на разных экранах и разных платформах — система, по большому счёту, именно для этого и создавалась.</p>
<p>Весь дизайн строится вокруг метафоры некоторого материала, который умеет вести себя определённым образом. Дизайн во многом отсылается к реальному миру наличием теней, отражений, слоями, которые располагаются один над другим. Крутая метафора, которая позволяет добиться единообразия проектирования не только на уровне внешнего вида, но и на уровне поведения интерфейса, независимо от устройства.</p>
<p>Есть дизайн-библиотеки, которые может использовать дизайнер и для Скетча, и для Фигмы. Довольно большое коммьюнити, есть техническая документация для разных платформ, хоть и не такая богатая, как у Ant Design.</p>
<p>Говоря о Material Design, стоит помнить, что он создан прежде всего для нужд конкретной компании и плотно ассоциируется с ней визуально. Стилизация здесь есть, но не такая богатая, потому что разработчикам было важно, чтобы итоговый продукт оставался цельным с гугловым окружением.</p>
<p>Кроме того, поддержка библиотек сильно зависит от текущего визуального языка Google. Например, на момент написания этой статьи вышел новый Material Design 3, в связи с чем поддержка предыдущей дизайн-библиотеки прекращается.</p>
</section>
<section id="consta" class="level3" data-number="1.3.3">
<h3 data-number="1.3.3"><a href="https://consta.gazprom-neft.ru/">Consta</a></h3>
<figure>
<img src="../media/file6.png" alt="Consta" />
<figcaption aria-hidden="true">Consta</figcaption>
</figure>
<p>Дизайн-система с открытым кодом из России, над которой работает «Газпром нефть». Создавалась также для нужд компании, но, в отличие от Material, не завязана на едином визуальном стиле. Основная цель её существования — ускорить разработку новых внутренних продуктов и цифровизацию процессов.</p>
<p>Позволяет очень быстро и гибко стилизовать компоненты: настроить цвета, шрифты, скругления, отступы, общее ощущение «воздушности» и много другое. Без особых усилий подключаются новые темы, система поддерживает существование одновременно нескольких тем в интерфейсе и их быстрое переключение.</p>
<p>Система изначально создавалась для веб-приложений формата десктоп и информационных панелей. Сейчас она постепенно адаптируется к мобильным версиям, но большинство целевых команд всё же работают над профессиональными и аналитическими десктопными веб-сервисами.</p>
<p>Consta делает акцент на связи в дизайн-системах дизайна и кода. Её создали люди, которые разбираются и в том, и в другом, поэтому она требует от дизайнера большего погружения в то, как это работает на фронте.</p>
<p>Документация для разработчика не такая богатая, как у Ant. Коммьюнити относительно небольшое. Однако получить прямой доступ к команде разработки и спросить о чём-то «создателя» гораздо проще за счёт того, что это открытый исходный код.</p>
<p>Дизайн-библиотека наиболее проработана из всех перечисленных, внешние команды тоже могут участвовать в его наполнении. Предоставляет меньше общих гайдлайнов, чем две другие библиотеки, но большое количество интерфейсных рекомендаций вынесено в описание самих компонентов.</p>
</section>
<section id="итог" class="level3" data-number="1.3.4">
<h3 data-number="1.3.4">Итог</h3>
<p>Нет правильных и неправильных качеств дизайн-систем. Нельзя сказать, что гибкий визуал должен быть обязательным свойством или, наоборот, что больше ограничений — лучше. Разработка любой дизайн-системы начинается с осознания задач и выявления характеристик системы, которые необходимы для их решения. Не стоит гнаться за лидерами рынка, но всегда полезно смотреть по сторонам. Возможно, кто-то уже придумал изящное решение для ситуации, которое подойдёт и вам.</p>
</section>
</div>
</section>
<section id="тест-по-разделу" class="level2" data-number="1.4">
<h2 data-number="1.4">1.4. Тест по разделу</h2>
<div class="text-container text-container--module">
<ol type="1">
<li><strong>Перечислите, что относится к дизайну.</strong></li>
</ol>
<ul>
<li>Внешний вид продукта.</li>
<li>Сценарии и взаимодействия в интерфейсе.</li>
<li>Точки контакта вне интерфейса.</li>
<li>Обработка интерфейсных ошибок.</li>
<li>Алгоритм валидации данных.</li>
<li>API компонента.</li>
</ul>
<ol start="2" type="1">
<li><strong>Кто занимается дизайном?</strong></li>
</ol>
<ul>
<li>Дизайнер.</li>
<li>Фронтенд-разработчик.</li>
<li>Бэкенд-разработчик.</li>
</ul>
<ol start="3" type="1">
<li><strong>Для чего нужен UI-кит?</strong></li>
</ol>
<ul>
<li>Чтобы дизайнер и разработчик могли переиспользовать компоненты.</li>
<li>Чтобы держать компоненты отдельно от остального макета.</li>
<li>Чтобы выложить его на Behance и пиарить дизайн-команду.</li>
</ul>
<ol start="4" type="1">
<li><strong>Что такое дизайн-система?</strong></li>
</ol>
<ul>
<li>UI-кит, который разделён на несколько файлов в Фигме.</li>
<li>Набор базовых компонентов в дизайне и коде.</li>
<li>Набор базовых компонентов в дизайне и коде + правила и принципы, которые помогают этот набор дополнять.</li>
</ul>
<ol start="5" type="1">
<li><strong>Что из перечисленного относится к дизайн-системе?</strong></li>
</ol>
<ul>
<li>Документация с принципами и общими правилами.</li>
<li>Компоненты в дизайне.</li>
<li>Компоненты в коде.</li>
<li>Описание интерфейсных паттернов.</li>
<li>Редполитика.</li>
<li>Инструменты для управления знаниями.</li>
</ul>
<ol start="6" type="1">
<li><strong>В каких случаях стоит задуматься об интерфейсной дизайн-системе?</strong></li>
</ol>
<ul>
<li>Одностраничный лендинг для продажи ежедневников-планеров.</li>
<li>Сайт авиакомпании.</li>
<li>Инстаграм-аккаунт цветочного магазина</li>
<li>Интернет-магазин туристических товаров.</li>
<li>Сайт-визитка IT-специалиста.</li>
</ul>
</div>
</section>
<section id="тест-по-разделу-ответы" class="level2" data-number="1.5">
<h2 data-number="1.5">1.4. Тест по разделу (Ответы)</h2>
<div class="text-container text-container--module">
<ol type="1">
<li><strong>Перечислите, что относится к дизайну.</strong></li>
</ol>
<ul>
<li>Внешний вид продукта.</li>
<li>Сценарии и взаимодействия в интерфейсе.</li>
<li>Точки контакта вне интерфейса.</li>
<li>Обработка интерфейсных ошибок.</li>
<li>Алгоритм валидации данных.</li>
<li>API компонента.</li>
</ul>
<ol start="2" type="1">
<li><strong>Кто занимается дизайном?</strong></li>
</ol>
<ul>
<li>Дизайнер.</li>
<li>Фронтенд-разработчик.</li>
<li>Бэкенд-разработчик.</li>
</ul>
<ol start="3" type="1">
<li><strong>Для чего нужен UI-кит?</strong></li>
</ol>
<ul>
<li>Чтобы дизайнер и разработчик могли переиспользовать компоненты.</li>
</ul>
<ol start="4" type="1">
<li><strong>Что такое дизайн-система?</strong></li>
</ol>
<ul>
<li>Набор базовых компонентов в дизайне и коде + правила и принципы, которые помогают этот набор дополнять.</li>
</ul>
<ol start="5" type="1">
<li><strong>Что из перечисленного относится к дизайн-системе?</strong></li>
</ol>
<ul>
<li>Документация с принципами и общими правилами.</li>
<li>Компоненты в дизайне.</li>
<li>Компоненты в коде.</li>
<li>Описание интерфейсных паттернов.</li>
<li>Редполитика.</li>
<li>Инструменты для управления знаниями.</li>
</ul>
<ol start="6" type="1">
<li><strong>В каких случаях стоит задуматься об интерфейсной дизайн-системе?</strong></li>
</ol>
<ul>
<li>Сайт авиакомпании.</li>
<li>Интернет-магазин туристических товаров.</li>
</ul>
</div>
</section>
<section id="каталог-российских-дизайн-систем" class="level2" data-number="1.6">
<h2 data-number="1.6">1.5. <a href="http://designsystemsclub.ru/">Каталог российских дизайн-систем</a></h2>
</section>
<section id="каталог-зарубежных-дизайн-систем" class="level2" data-number="1.7">
<h2 data-number="1.7">1.6. <a href="https://designsystemsrepo.com/design-systems/">Каталог зарубежных дизайн-систем</a></h2>
</section>
<section id="обзор-интерфейса-figma" class="level2" data-number="1.8">
<h2 data-number="1.8">1.7. Обзор интерфейса Figma</h2>
<div class="text-container text-container--module">
<p>Figma (Фигма) — это графический редактор для дизайнеров и разработчиков веб-интерфейсов, то есть в ней можно и посмотреть данные из макета, и поправить этот макет, а дизайнер может сделать макет с нуля.</p>
<p>Фигма использует в качестве основных единиц пиксели (<code>px</code>) и показывает все цвета в шестнадцатеричном формате (<code>#000000</code>) или RGBA (<code>rgba(0, 0, 0, 0)</code>), большинство параметров можно скопировать сразу в CSS.</p>
<p>Это интуитивный и универсальный инструмент, его можно использовать в браузере, а можно установить программу (есть для Windows, MacOS, скачать можно <a href="https://www.figma.com/downloads/">по ссылке</a>). Там же можно скачать приложение для смартфонов <em>Figma Mirror</em>, оно позволяет показывать на смартфоне макеты из обычной версии Фигмы.</p>
<p>Чтобы начать пользоваться редактором, нужно зайти на <a href="https://www.figma.com/">сайт</a> и зарегистрироваться. Можно войти через <em>Google</em> или просто создать аккаунт на сайте.</p>
<figure>
<img src="../media/file7.png" alt="Регистрация в Фигме" />
<figcaption aria-hidden="true">Регистрация в Фигме</figcaption>
</figure>
<p>Затем вы попадёте в менеджер проектов, где увидите образцы макетов. Их можно использовать для ознакомления с инструментами приложения.</p>
<figure>
<img src="../media/file8.png" alt="Образцы макетов в Фигме" />
<figcaption aria-hidden="true">Образцы макетов в Фигме</figcaption>
</figure>
<p>Здесь же можно добавить свой проект, нажав на соответствующую иконку <em>Import file</em>. Макет проекта должен иметь расширение <code>.fig</code> или <code>.sketch</code>. При этом файл с расширением <code>.sketch</code> Фигма конвертирует в свой формат.</p>
<p>При импорте макета нужно не забыть дополнительно загрузить нестандартные шрифты, если они используются в проекте. По умолчанию Фигма синхронизирована с <em>Google Fonts</em>, но если вы используете локальные шрифты, то в браузерной версии нужны дополнительные действия (десктопная Фигма видит локальные шрифты сама). Чтобы установить в браузерной версии <em>Figma Font Helper</em>, который подключит локальные шрифты, нужно зайти в <em>Menu &gt; Help and Account &gt; Account Settings &gt; Fonts</em>.</p>
<figure>
<img src="../media/file9.png" alt="Figma Font Helper загружается в настройках аккаунта" />
<figcaption aria-hidden="true"><em>Figma Font Helper</em> загружается в настройках аккаунта</figcaption>
</figure>
<figure>
<img src="../media/file10.png" alt="Загрузка шрифтов в Фигму" />
<figcaption aria-hidden="true">Загрузка шрифтов в Фигму</figcaption>
</figure>
<p>После этого Фигма синхронизируется с <em>Google Fonts</em> и начнёт подтягивать шрифты, которые уже установлены у вас локально. На скриншоте видно количество уже установленных локальных шрифтов, которые Фигма сможет опознать. Если и этого недостаточно, то вам нужно будет установить локальный шрифт, чтобы он «подтянулся» к макету. В противном случае вы не сможете отредактировать текст в макете, а это бывает важно.</p>
<p>В системе <em>Windows</em> файлы шрифтов лежат в папке <code>C:\Windows\Fonts</code>, а на <em>Mac</em> папка <em>Fonts</em> находится в каталоге <em>Library</em>. Если зайти туда, можно увидеть, что в этих папках просто сложены файлы шрифтов. Оттуда их используют все программы и ресурсы, работающие с текстовым контентом. Если шрифт кастомный, попросите дизайнера прислать его вам и распакуйте файл шрифта в папку. Если шрифт с открытой лицензией, его обычно можно скачать с сайта производителя или с агрегаторов шрифтов.</p>
<p>Выгружаются макеты только в <code>.fig</code> и <code>.pdf</code>. С форматом <code>.psd</code> Фигма не работает.</p>
<figure>
<img src="../media/file11.png" alt="Выгрузка макета" />
<figcaption aria-hidden="true">Выгрузка макета</figcaption>
</figure>
<p>Фигма до определённой степени бесплатна. Можно загрузить в неё любое количество макетов (<em>drafts</em>) и объединить их в три бесплатные группы (<em>teams</em>). В них вы с коллегами сможете обменяться проектами (<em>projects</em>) и проконтролировать версии (бесплатно история хранится месяц).</p>
<p>Загруженными в Фигму файлами можно делиться. Присланные файлы открываются в режиме просмотра, чтобы их добавить к себе, нужно нажать на кнопку <em>Duplicate</em>.</p>
<figure>
<img src="../media/file12.png" alt="Копировать макет в свой кабинет" />
<figcaption aria-hidden="true">Копировать макет в свой кабинет</figcaption>
</figure>
<p>В режиме просмотра доступны CSS, экспорт изображений и измерения размеров, в целом можно этим ограничиться. В режиме просмотра нельзя ничего настроить: ни направляющие, ни модульную сетку, ни фон рабочей области, ни слои не объединить. К тому же сами значения параметров (цвет, заливка, высота <em>H</em>, ширина <em>W</em>…) в режиме просмотра видны только в CSS, а не в интуитивно понятном визуальном виде.</p>
<p>У десктопной версии та же функциональность, что и у браузерной. В этом «фишка» Фигмы: её можно использовать в полном объёме, не устанавливая программу на компьютер. Так что мы рассказываем о браузерной версии Фигмы и в режиме редактирования.</p>
<p>Напоминаем, что графические редакторы и просмотрщики показывают то, как макет сделал дизайнер. Структура макета может не совпадать с семантической разметкой или с тем, как лучше верстать и указывать стили. Всё, что можно узнать из Фигмы или любого другого редактора, нужно сверять с реальной картинкой (можно воспользоваться инструментом <em>PerfectPixel</em>, например), спецификацией и здравым смыслом.</p>
</div>
</section>
<section id="навигация-инструменты-настройки-figma" class="level2" data-number="1.9">
<h2 data-number="1.9">1.8. Навигация, инструменты, настройки Figma</h2>
<div class="text-container text-container--module">
<p>Так как Фигма — это графический редактор, многие элементы сделаны для дизайнеров и нам не пригодятся. Рассмотрим только необходимые для нашей работы функции и интерфейсы.</p>
<section id="рабочая-область" class="level3" data-number="1.9.1">
<h3 data-number="1.9.1">Рабочая область</h3>
<p>В середине, между панелями инструментов, выводится рабочая область, именно на ней отображается наш макет. Фоновый цвет можно поменять, если кликнуть по фону и заменить цвет в правой панели во вкладке <em>Design &gt; Background</em>. По умолчанию стоит <code>#f2f2f2</code>, его можно заменить на любой другой.</p>
<figure>
<img src="../media/file13.png" alt="Изменить фон рабочей области" />
<figcaption aria-hidden="true">Изменить фон рабочей области</figcaption>
</figure>
<p>Мы предпочитаем использовать не слишком светлые и нейтральные оттенки серого, чтобы границы макета не сливались с фоном и цвета визуально не искажались.</p>
</section>
<section id="верхняя-панель" class="level3" data-number="1.9.2">
<h3 data-number="1.9.2">Верхняя панель</h3>
<p>В верхней строке слева есть меню <em>Quick actions</em>, которое можно вызвать сочетанием Ctrl+/ (Cmd+/ для Mac). По нему есть поиск.</p>
<p>В основном в меню хранятся функции для дизайнеров. Большинство настроек для верстальщиков продублированы в других местах, дальше мы посмотрим, как до них удобнее добраться.</p>
<figure>
<img src="../media/file14.png" alt="Поиск по меню" />
<figcaption aria-hidden="true">Поиск по меню</figcaption>
</figure>
<p>Справа от меню <em>Quick actions</em> размещается панель инструментов. Здесь мы будем использовать инструмент по умолчанию — <em>Move</em> (горячая клавиша V), который выбирает слои. Аккуратно: этим инструментом можно сдвинуть элементы. Чтобы «откатить» изменения, нажмите Ctrl/Cmd+Z или <em>Menu &gt; Undo</em>.</p>
<figure>
<img src="../media/file15.png" alt="Инструмент по умолчанию — Move" />
<figcaption aria-hidden="true">Инструмент по умолчанию — <em>Move</em></figcaption>
</figure>
<p>Предпоследний инструмент с ладошкой на иконке так и называется — <em>Hand tool</em>. Он позволяет перемещать окно просмотра (вьюпорт) над макетом, не сдвигая отдельные элементы. Его горячая клавиша — H.</p>
<figure>
<img src="../media/file16.png" alt="Инструмент Hand tool" />
<figcaption aria-hidden="true">Инструмент <em>Hand tool</em></figcaption>
</figure>
<p>В Фигме можно оставлять комментарии и отвечать на них. Для этого есть инструмент <em>Add/Show Comments</em> в верхней панели, на него можно переключиться горячей клавишей C. Это бывает полезно, ведь над макетом могут работать несколько человек одновременно.</p>
<figure>
<img src="../media/file17.png" alt="Комментарии в Фигме удобны для работы в команде" />
<figcaption aria-hidden="true">Комментарии в Фигме удобны для работы в команде</figcaption>
</figure>
<p>В середине панели выводится название макета, его можно изменить прямо здесь.</p>
<figure>
<img src="../media/file18.png" alt="Название макета в верхней панели" />
<figcaption aria-hidden="true">Название макета в верхней панели</figcaption>
</figure>
<p>В верхней панели справа располагаются:</p>
<ul>
<li>иконка профиля;</li>
<li>голубая кнопка <em>Share</em>, с помощью которой можно скопировать ссылку на проект, добавить в него человека по электронной почте и открыть доступ к просмотру или редактированию;</li>
<li>кнопка масштабирования, в которой можно приблизить макет (или можно воспользоваться клавишами Cmd/Ctrl +/-).</li>
</ul>
</section>
<section id="вывод-направляющих" class="level3" data-number="1.9.3">
<h3 data-number="1.9.3">Вывод направляющих</h3>
<p>Чтобы показать или скрыть направляющие, добавленные дизайнером в макет, можно открыть меню <em>Quick actions</em>, а затем выбрать пункт <em>Rulers</em> в выпадающем подменю <em>View</em>. Также можно найти эту опцию в выпадающем списке по нажатию на кнопку масштабирования. В обоих местах Фигма подсказывает горячие клавиши для направляющих — Shift+R.</p>
<p>Включение направляющих также добавит линейки: вертикальную с левой стороны рабочей области и горизонтальную — с верхней. Благодаря этим линейкам можно не только ориентироваться в координатах объектов, но и самому добавлять направляющие. Для этого нужно просто вытянуть их из линеек на рабочую область с зажатой левой клавишей мыши. Чтобы удалить лишние направляющие, перетяните их обратно можно на соответствующую линейку.</p>
<figure>
<img src="../media/file19.png" alt="Вывод направляющих" />
<figcaption aria-hidden="true">Вывод направляющих</figcaption>
</figure>
</section>
<section id="как-вывести-модульную-сетку" class="level3" data-number="1.9.4">
<h3 data-number="1.9.4">Как вывести модульную сетку</h3>
<p>В Фигме по умолчанию включена пиксельная сетка. Её видимость можно переключать с помощью самого верхнего пункта <em>Pixel grid</em> в том же выпадающем подменю <em>View</em> меню <em>Quick actions</em>. Или горячими клавишами Ctrl/Cmd+’.</p>
<p>Помимо пиксельной сетки, в Фигме есть возможность включить модульную сетку, если дизайнер её добавил в макет. С её помощью можно увидеть структуру макета, посмотреть закономерности, а также понять принцип построения колонок и элементов в сетке сайта.</p>
<p>Включается она в том же подменю: пункт <em>Layout grids</em> или Ctrl+Shift+4 (Control+G на Mac). Затем нужно выбрать корневой фрейм (с #) и в правой панели в блоке <em>Layout grid</em> включить видимость.</p>
<p>Модульную сетку легко настраивать: можно выбрать количество рядов или колонок, настроить интервалы, добавить боковые отступы. Это очень удобно, особенно если вы работаете с CSS Grid Layout. Навык по работе с этой технологией здесь: «<a href="https://htmlacademy.ru/skills/grid-layout">Построение сеток на гридах по макету</a>».</p>
<figure>
<img src="../media/file20.png" alt="Включённая функция Layout grids позволяет вывести модульную сетку" />
<figcaption aria-hidden="true">Включённая функция <em>Layout grids</em> позволяет вывести модульную сетку</figcaption>
</figure>
</section>
</div>
</section>
<section id="содержание-и-возможности-figma" class="level2" data-number="1.10">
<h2 data-number="1.10">1.9. Содержание и возможности Figma</h2>
<div class="text-container text-container--module">
<section id="панель-слоёв-слева" class="level3" data-number="1.10.1">
<h3 data-number="1.10.1">Панель слоёв — слева</h3>
<p>Перечень слоёв, страниц и графических элементов находится в левой панели.</p>
<p>У левой панели есть своё верхнее меню, в нём три пункта: <em>Layers</em> (слои), <em>Pages</em> (страницы) и <em>Assets</em> (в данном случае — вложения). В <em>Assets</em> кладут многоразовые компоненты, которые после этого можно изменить прямо в <em>Assets</em>, и везде, где они использовались, они изменятся автоматически. В <em>Pages</em> можно переключаться между страницами макета.</p>
<figure>
<img src="../media/file21.png" alt="Панель со вкладками слоёв, страниц и вложений" />
<figcaption aria-hidden="true">Панель со вкладками слоёв, страниц и вложений</figcaption>
</figure>
<p>На одной странице может располагаться весь макет: десктопная и мобильная версия, всплывающие окна и прочее. В панели слоёв корневые, самые крупные слои (фреймы) будут выделены жирным и решёткой — #, как и инструмент <em>Frame</em>, с помощью которого они созданы.</p>
<p>У слоёв есть иконки, обозначающие их содержание. Буква <em>T</em> показывает текстовые слои, рисунок — растровую графику, компоненты из <em>Assets</em> подсветятся фиолетовым, векторная графика получит иконку в виде кривой или в виде своей формы (как <em>Ellipse</em> на примере). Скрытые слои (с «закрытым глазиком») становятся серыми.</p>
<figure>
<img src="../media/file22.png" alt="Во фрейме # 1920 есть группы и векторные элементы. Line 9 — векторный элемент, T — текстовый" />
<figcaption aria-hidden="true">Во фрейме # 1920 есть группы и векторные элементы. <em>Line 9</em> — векторный элемент, <em>T</em> — текстовый</figcaption>
</figure>
<p>Чтобы найти нужный слой, можно поискать его в перечне слоёв или кликнуть на объект и посмотреть в левой панели. Если слоёв много и они вложены один в другой, кликать придётся больше: двойной клик по объекту будет погружать вас на слой глубже. Раскрыть всё содержимое слоя можно зажав Ctrl/Cmd и кликнув на маленькую стрелочку слева от иконки слоя. Или можно кликнуть на область, а потом вызвать правой кнопкой мыши меню и в первом пункте выбрать нужный слой. Можно переключать слои с помощью Tab/Shift+Tab. Правда, переключение работает только на слой с таким же уровнем вложенности, без проваливания вглубь.</p>
<figure>
<img src="../media/file23.png" alt="Найти нужный слой можно как в панели слоёв, так и вызвав меню правой кнопкой мыши" />
<figcaption aria-hidden="true">Найти нужный слой можно как в панели слоёв, так и вызвав меню правой кнопкой мыши</figcaption>
</figure>
<p>При выделении слоя данные о нём и его содержимом выводятся в правой панели.</p>
<figure>
<img src="../media/file24.png" alt="В правой панели вывелись данные о выделенном объекте" />
<figcaption aria-hidden="true">В правой панели вывелись данные о выделенном объекте</figcaption>
</figure>
</section>
<section id="правая-панель-и-получение-параметров" class="level3" data-number="1.10.2">
<h3 data-number="1.10.2">Правая панель и получение параметров</h3>
<p>В правой панели три вкладки: <em>Design</em> (дизайн), <em>Prototype</em> (прототипирование) и <em>Inspect</em> (просмотр свойств). Нам нужны <em>Design</em> и <em>Inspect</em>. Кстати, в <em>Inspect</em> можно выбрать язык, на котором будут показаны сведения. По умолчанию это CSS.</p>
<figure>
<img src="../media/file25.png" alt="Вкладки с дизайном и кодом" />
<figcaption aria-hidden="true">Вкладки с дизайном и кодом</figcaption>
</figure>
<p>Во вкладке <em>Design</em> самый верхний блок показывает выравнивание всего блока, дальше идут данные о расстояниях по вертикали и горизонтали, <em>W</em> и <em>H</em> показывают размеры объекта (это пригодится для измерения размеров картинок и блоков), ниже находятся угол поворота и скругления; если скругление не применяется, то и параметр выводиться не будет.</p>
<figure>
<img src="../media/file26.png" alt="Данные о размерах выделенного объекта" />
<figcaption aria-hidden="true">Данные о размерах выделенного объекта</figcaption>
</figure>
<p>Ниже идут блоки, которые не показываются, если таких данных нет, или выглядят бледными, если не активны:</p>
<ul>
<li>в <em>Layer</em> можно посмотреть прозрачность;</li>
<li><em>Text</em> с данными о текстовом содержимом;</li>
<li><em>Fill</em>, показывающий заливки, в том числе градиентные (с перетеканием цветов);</li>
<li><em>Stroke</em>, который показывает сведения об обводках;</li>
<li><em>Effects</em>, который показывает тени и размытие;</li>
<li><em>Export</em>, позволяющий выгрузить любой слой в форматах PNG, SVG, JPG или PDF, и вложенный в него <em>Preview</em>, позволяющий увидеть изображение того, что мы выгружаем.</li>
</ul>
<p>В целом все данные (кроме графики, которую нужно экспортировать) можно получить во вкладке <em>Inspect</em> в формате CSS, они даже иногда описаны комментариями.</p>
<figure>
<img src="../media/file27.png" alt="Данные о градиенте предваряются комментарием" />
<figcaption aria-hidden="true">Данные о градиенте предваряются комментарием</figcaption>
</figure>
<p>Не нужно (читай: нельзя, запрещено из принципов здравого смысла) копировать CSS из графического редактора или просмотрщика целиком как он есть, там много лишнего. Следует брать конкретные правила для конкретных задач и проверять их перед тем, как вставить в свой код. Например, если вам нужна информация о градиенте, то код, который вы скопируете, должен быть примерно таким: <code>background: linear-gradient(270deg, #242735 28.51%, #363B51 100%);</code></p>
<p>Часть кода может вовсе оказаться лишней, например, иногда встречаются белые границы у блоков с белой заливкой. В таком случае строка кода с описанием границы явно будет лишней.</p>
</section>
</div>
</section>
<section id="словарь-терминов" class="level2" data-number="1.11">
<h2 data-number="1.11">1.10. Словарь терминов</h2>
<div class="text-container text-container--module">
<p><strong>Кегль</strong>. Размер буквы или знака шрифта по вертикали, включающий её нижние и верхние выносные элементы; размер шрифта.</p>
<p><strong>Интерлиньяж</strong> (от французского <em>interligne</em>). Дословно переводится как «написанное между строк» и означает расстояние между двумя строками. Стандартное (автоматическое) значение интерлиньяжа — 120% от кегля, при наборе 10-м кеглем интерлиньяж составляет 12 пикселей. В художественных целях интерлиньяж может быть увеличен или уменьшен, но, поскольку от него зависит читаемость текста, небольшой интерлиньяж применяется нечасто — например, только в заголовках.</p>
<p><strong>Насыщенность (вес) шрифта</strong>. Ещё называется жирностью или толщиной шрифта. Позволяет управлять контрастностью текста: чем жирнее начертание, тем контрастнее выделяется текст. В большинстве системных шрифтов есть только два варианта насыщенности: обычная и жирная (<em>Normal, Bold</em>). Для каждого веса шрифта отрисовывается отдельный пакет символов, если вы используете <em>Google Fonts</em>, нужно этот пакет добавить в выгрузку. Автоматическая браузерная подстройка, если используется такой вес, которого в пакете шрифта не было, выглядит обычно хуже, чем оригинальная версия того же веса.</p>
<p><strong>Регистр</strong> (от новолатинского <em>registrum</em>). Дословно — «внесённое», означает выбор маленьких (строчных) или больших (прописных) букв. Встречаются ситуации, когда весь текст оформлен прописными или строчными буквами. Специфические техники — <em>Camel case</em>, когда каждый следующий корень составного слова начинается с прописной буквы (<em>CanIUse</em>), <em>Snake case</em>, когда между словами выставляется нижнее подчёркивание (<em>main_nav_item</em>). Написание каждого нового слова с большой буквы в русском языке не принято.</p>
<p><strong>Трекинг</strong> (от английского <em>tracking</em>). Изменение межбуквенных пробелов с определённой целью: сделать текст более разреженным и светлым либо более плотным и тёмным. Ещё трекинг используется при вёрстке, чтобы увеличить или уменьшить количество строк и таким образом избавиться от висячих предлогов, слов и строк, но на сайтах лучше так не делать. Хорошим тоном является числовое значение трекинга, не превышающее +/- 25.</p>
<p>Шестнадцатеричный формат цвета. Это способ представления цветов в вебе. Пример — <code>#112233</code>. Представление в виде трёх пар шестнадцатеричных цифр, где каждая пара отвечает за свой цвет:</p>
<ul>
<li>две первые цифры — красный;</li>
<li>две в середине — зелёный;</li>
<li>две последние цифры — синий.</li>
</ul>
<p>Возможно также краткое представление цвета в виде <code>#ABC</code>, что будет интерпретировано как <code>#AABBCC</code>.</p>
</div>
</section>
<section id="практика-работы-в-figma" class="level2" data-number="1.12">
<h2 data-number="1.12">1.11. Практика работы в Figma</h2>
<div class="text-container text-container--module">
<section id="получение-данных-о-тексте" class="level3" data-number="1.12.1">
<h3 data-number="1.12.1">Получение данных о тексте</h3>
<p>Информация о тексте и его свойствах находится справа в панели <em>Text</em>. Она появляется во вкладке <em>Design</em>, когда выделен текстовый слой. Чтобы выделить текстовый слой, обычно достаточно на него кликнуть, но иногда это не получается сразу. Тогда можно нажать на текст правой кнопкой мыши, в появившемся меню самый верхний пункт, <em>Select Layer</em> позволит выбрать текстовый слой.</p>
<p>Сам текст можно копировать из слоя или просто из рабочей панели. Для этого нужно нажать правой кнопкой мыши на слой в панели <em>Layouts</em> и дойти в открывшемся меню до пункта <em>Copy</em>. Также можно выделить текстовый объект с помощью правой кнопкой мыши и затем нажать <em>Copy</em> или <em>Copy/Past as</em> либо нажать Ctrl/Cmd+C.</p>
<figure>
<img src="../media/file28.png" alt="Скопировать текст из слоя" />
<figcaption aria-hidden="true">Скопировать текст из слоя</figcaption>
</figure>
<p>Данные о цвете текста выведены в правой панели чуть ниже информации собственно о тексте, в панели <em>Fill</em> и в панели Градиент, если дизайн предполагает переливы.</p>
<p><strong>Что мы должны узнать о тексте:</strong></p>
<ul>
<li>семейство и тип (наличие засечек);</li>
<li>размер шрифта;</li>
<li>насыщенность (вес);</li>
<li>цвет;</li>
<li>прозрачность / градиент / эффекты;</li>
<li>выравнивание;</li>
<li>межстрочный интервал;</li>
<li>межбуквенный интервал.</li>
</ul>
<p>Эти данные можно скопировать во вкладке <em>Inspect</em> прямо в CSS. Фигма умная и группирует свойства по типам. Сверху — позиция и отступы, дальше — собственно о тексте, если мы выделили текстовый слой.</p>
<p>Кстати, о насыщенности шрифта. Ею управляет свойство <code>font-weight</code>, и её значение можно задать кодовым словом (<em>bold, normal</em>), но не только им. Например, если вы работаете с <em>Google Fonts</em>, вам нужно знать числовые значения насыщенности, чтобы сформировать ссылку на шрифт.</p>
<p>Свойство <code>font-weight</code>: соотношение значений</p>
<ul>
<li><p>100: <em>Thin</em>;</p></li>
<li><p>200: <em>Extra Light (Ultra Light)</em>;</p></li>
<li><p>300: <em>Light</em>;</p></li>
<li><p>400: <em>Normal (Regular, auto)</em>;</p></li>
<li><p>500: <em>Medium</em>;</p></li>
<li><p>600: <em>Semi Bold (Demi Bold)</em>;</p></li>
<li><p>700: <em>Bold</em>;</p></li>
<li><p>800: <em>Extra Bold (Ultra Bold)</em>;</p></li>
<li><p>900: <em>Black (Heavy)</em>.</p></li>
</ul>
<figure>
<img src="../media/file29.png" alt="Данные о тексте сгруппированы в коде отдельно от данных о размерах объекта" />
<figcaption aria-hidden="true">Данные о тексте сгруппированы в коде отдельно от данных о размерах объекта</figcaption>
</figure>
<p>В коде, полученном из Фигмы, характеристики текста могут выглядеть в худшем случае так (на самом деле нет, потому что всё сразу никогда не применяется):</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>{</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">font-family</span>: Roboto<span class="op">;</span>               <span class="co">/* шрифт */</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">font-style</span>: <span class="dv">italic</span><span class="op">;</span>                <span class="co">/* начертание, курсив */</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  <span class="kw">font-weight</span>: <span class="dv">bold</span><span class="op">;</span>                 <span class="co">/* вес, соотношение весов выше */</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  <span class="kw">font-size</span>: <span class="dv">20</span><span class="dt">px</span><span class="op">;</span>                   <span class="co">/* размер шрифта */</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  <span class="kw">line-height</span>: <span class="dv">32</span><span class="dt">px</span><span class="op">;</span>                 <span class="co">/* высота строки */</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  <span class="co">/* or 160% */</span>                      <span class="co">/* высота строки в альтернативном формате */</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  <span class="kw">letter-spacing</span>: <span class="dv">0.03</span><span class="dt">em</span><span class="op">;</span>            <span class="co">/* межсимвольное расстояние, разреженность */</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>  <span class="kw">text-transform</span>: <span class="dv">uppercase</span><span class="op">;</span>         <span class="co">/* регистр, всё прописными */</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>  <span class="kw">color</span>: <span class="cn">#000000</span><span class="op">;</span>                    <span class="co">/* цвет шрифта */</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>  <span class="kw">opacity</span>: <span class="dv">0.7</span><span class="op">;</span>                      <span class="co">/* прозрачность шрифта */</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>  <span class="kw">text-shadow</span>: <span class="dv">0</span><span class="dt">px</span> <span class="dv">0</span><span class="dt">px</span> <span class="dv">5</span><span class="dt">px</span> <span class="cn">#000000</span><span class="op">;</span>  <span class="co">/* тень текста */</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>Обратите внимание, вам могут пригодиться не все из этих свойств. Например, если весь сайт сделан одним шрифтом, прописывать его каждый раз не нужно, то же касается и размеров, и цветов, и веса… В общем, всё по принципу каскада. Некоторые свойства придётся подправить. Например, <code>font-family: Roboto;</code> было бы правильнее написать так: <code>font-family: "Roboto", "Arial", sans-serif;</code>. Помним, что для доступности корректно прописывать запасной веб-безопасный шрифт, название шрифта пишут в кавычках, и факт, что шрифт без засечек (<em>sans-serif</em>), также принято указывать. Правильное написание шрифта можно получить из <em>Google Fonts</em>, а потом дописать туда веб-безопасный шрифт.</p>
<p>Если вы не уверены, какие CSS-свойства нужны для стилизации текста, пройдите наши интерактивные курсы по CSS. Мы рассказываем об этом в главах «<a href="https://htmlacademy.ru/courses/309">Оформление текста, часть 1</a>» и «<a href="https://htmlacademy.ru/courses/79">Оформление текста, часть 2</a>». Детальнее о текстах, шрифтах, их особенностях и правилах работы с ними можно узнать в навыке <a href="https://htmlacademy.ru/skills/text-layout">Вёрстка текстового содержимого страниц</a>».</p>
</section>
<section id="измерение-размеров-и-расстояний" class="level3" data-number="1.12.2">
<h3 data-number="1.12.2">Измерение размеров и расстояний</h3>
<p>Если выделить объект, Фигма покажет под ним его размеры на синей плашке. Можно увидеть ту же информацию в правой панели. Это будет выглядеть, например, так:</p>
<ul>
<li>под объектом — <code>123 х 23</code>,</li>
<li>в правой панели:
<ul>
<li>во вкладке <em>Design</em> — <code>W 123</code> и <code>H 23</code>,</li>
<li>во вкладке <em>Inspect</em> — <code>width: 123px; height: 23px;</code>.</li>
</ul></li>
</ul>
<p>Чтобы измерить расстояние между объектами, достаточно выбрать первый объект, нажать Alt/Option и навести на второй — расстояние будет показано на красной плашке возле красной линии между объектами.</p>
<figure>
<img src="../media/file30.png" alt="Расстояния между объектами и отступы" />
<figcaption aria-hidden="true">Расстояния между объектами и отступы</figcaption>
</figure>
<p>Фигма позволяет измерять расстояния от блока до блока. Когда будете верстать, убедитесь, что размеры и расстояния в ваших CSS-правилах написаны с учётом собственных отступов объектов. Вероятно, они будут не совпадать со скопированными из Фигмы.</p>
<p>Также в Фигме можно измерить расстояние от блока до направляющей. Это делается так же: выбирается объект, потом нужно навести курсор на направляющую. Расстояние между направляющими, к сожалению, придётся посчитать вручную по пиксельной линейке сверху или слева. Или же временно создать объект, примыкающий к одной из направляющих, и от него измерить расстояние до другой направляющей</p>
</section>
<section id="работа-с-цветами-и-эффектами" class="level3" data-number="1.12.3">
<h3 data-number="1.12.3">Работа с цветами и эффектами</h3>
<p>Чтобы получить информацию о цветах фонов и заливок объектов, по-прежнему можно просто выбрать объект. В правой панели выведутся его параметры, во вкладке <em>Design</em> в блоке <em>Fill</em> — о заливке, как её делал дизайнер, во вкладке <em>Inspect</em> эти данные будут сразу в формате CSS.</p>
<p>Фигма по умолчанию во вкладке <em>Inspect</em> отображает цвета в hex-формате, например, <code>#ffffff;</code>. Но иногда у цвета есть такая характеристика, как прозрачность. Обычно цвета с прозрачностью имеют формат RGBA, где a — альфа-канал, — это и есть прозрачность. Выглядит это так: <code>rgba(255, 255, 0, 0.5);</code>, и в таком случае прозрачность подаётся в десятичной дроби, или так: <code>color: #ffff80; opacity: 50%;</code>, это тот же цвет с теми же параметрами прозрачности.</p>
<p>Если нам повезло и дизайнер применил градиенты, тени и скругления, мы также можем скопировать параметры этих эффектов во вкладке <em>Inspect</em>.</p>
<p>Если все эффекты (градиент, тень, размытие и скругление) применены к одному объекту, в CSS будет выводиться примерно следующее:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.button</span> {</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">background</span>: <span class="fu">linear-gradient(</span><span class="dv">90</span><span class="dt">deg</span><span class="op">,</span> <span class="cn">#FF1100</span> <span class="dv">0</span><span class="dt">%</span><span class="op">,</span> <span class="cn">#FF8A00</span> <span class="dv">100</span><span class="dt">%</span><span class="fu">)</span><span class="op">;</span> <span class="co">/*  это градиент  */</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">box-shadow</span>: <span class="dv">0</span><span class="dt">px</span> <span class="dv">2</span><span class="dt">px</span> <span class="dv">2</span><span class="dt">px</span> <span class="fu">rgba(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0</span><span class="op">,</span> <span class="dv">0.25</span><span class="fu">)</span><span class="op">;</span>                  <span class="co">/*  это тень  */</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>  <span class="kw">filter</span>: <span class="fu">blur(</span><span class="dv">4</span><span class="dt">px</span><span class="fu">)</span><span class="op">;</span>                                            <span class="co">/*  это размытие  */</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  <span class="kw">border-radius</span>: <span class="dv">10</span><span class="dt">px</span><span class="op">;</span>                                          <span class="co">/*  это скругление  */</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>Обратите внимание, что для управления тенью текста использовалось свойство <code>text-shadow</code>, а для контейнера — <code>box-shadow</code>.</p>
<figure>
<img src="../media/file31.png" alt="Все эффекты в одной кнопке" />
<figcaption aria-hidden="true">Все эффекты в одной кнопке</figcaption>
</figure>
<p>Границы и «полосочки» Фигма также отобразит во вкладке <em>Inspect</em>, даже если никаких особенных эффектов к этой границе не применено. Вы получите следующий код: <code>border: 2px solid #FFFFFF;</code></p>
</section>
<section id="экспорт-графики" class="level3" data-number="1.12.4">
<h3 data-number="1.12.4">Экспорт графики</h3>
<p>Чтобы экспортировать из Фигмы графику, нужно её найти и выбрать, затем развернуть блок <em>Export</em>, определить, в каком формате мы будем выгружать графику, а потом нажать одноимённую кнопку в правой панели снизу.</p>
<p>У Фигмы есть возможность проверить, то ли мы выгружаем, что хотели. Для этого в блоке <em>Export</em> разворачивается <em>Preview</em>.</p>
<figure>
<img src="../media/file32.png" alt="Экспортирование круга с градиентной заливкой" />
<figcaption aria-hidden="true">Экспортирование круга с градиентной заливкой</figcaption>
</figure>
<p>Если дизайнер планировал многократное использование объектов, часть графики может лежать в директории <em>Assets</em>, её можно найти в левой панели наверху.</p>
<figure>
<img src="../media/file33.png" alt="Иконки в папке Assets" />
<figcaption aria-hidden="true">Иконки в папке <em>Assets</em></figcaption>
</figure>
<p>Остальные элементы нужно выделить в рабочей панели или поискать в слоях. Обычно у растрового графического контента в панели слоёв появляется иконка в виде картинки.</p>
<p>Векторные изображения получают иконку в виде себя самих или в виде кривой.</p>
<p>Если нужно выгрузить в одном формате несколько графических объектов, их можно скачать массово. Чтобы выбрать в <em>Assets</em> или <em>Layers</em> несколько картинок, нужно удерживать Shift или Ctrl/Cmd (в зависимости от того, рядом расположены картинки или нет). При этом все изображения будут собраны в один архив.</p>
<figure>
<img src="../media/file34.png" alt="Экспорт однотипных объектов" />
<figcaption aria-hidden="true">Экспорт однотипных объектов</figcaption>
</figure>
<p>Если нужно выгрузить группу элементов одним слоем, это также можно сделать, объединив их в группу.</p>
<figure>
<img src="../media/file35.png" alt="Экспорт нескольких слоёв как единого изображения" />
<figcaption aria-hidden="true">Экспорт нескольких слоёв как единого изображения</figcaption>
</figure>
<p>Как выбрать, в каком формате лучше сохранять изображения? Это зависит от многих параметров. Например, в статье «<a href="https://htmlacademy.ru/blog/boost/graphics/content-or-decor-img">Как отличить контентное изображение от декоративного</a>» мы рассказываем, как понять, с каким изображением мы имеем дело — декоративным или контентным. А подробно о форматах изображений можно почитать в статье «<a href="https://htmlacademy.ru/blog/boost/graphics/image-formats">Форматы изображений для веба</a>».</p>
<section id="подробнее-о-кадрировании-масках-и-их-экспорте" class="level4" data-number="1.12.4.1">
<h4 data-number="1.12.4.1">Подробнее о кадрировании, масках и их экспорте</h4>
<p>А что, если изображение кадрировано прямо в Фигме? Или преобразовано в круг? Обычно это делается с помощью масок. Маска накладывается сверху на изображение и показывает только то, что лежит внутри маски. При наложении маски исходное изображение остаётся неизменным, дополнительно изображение можно перемещать под маской, показывая или скрывая его части.</p>
<figure>
<img src="../media/file36.png" alt="Пример кадрирования в круг с помощью маски" />
<figcaption aria-hidden="true">Пример кадрирования в круг с помощью маски</figcaption>
</figure>
<p>Объединённые масочной группой изображение и его маска могут выгружаться вместе, тогда это как бы будет кадрирование изображения по размерам в макете. А можно выгрузить само изображение, как оно есть, и потом стилизовать его на сайте с помощью CSS.</p>
<p>В окончательную версию сайта необязательно попадут те изображения, которые дизайнер вставил в макет. Более того, есть вероятность, что с сайтом будет работать контент-менеджер или другой специалист, который, может быть, не станет разбираться с нюансами (вырезать формы и накладывать маски, к примеру) и просто вставит такое изображение, которое у него есть. Скорее всего, это будет прямоугольный JPG. Из этого следует, что если на сайте должно появиться круглое контентное изображение, то «вырезание» круга должно происходить на самом сайте. Однако декоративная графика чаще всего не меняется пользователями и специалистами по контенту.</p>
<p>При выгрузке изображений каждый раз встаёт вопрос: выгружать группу или отдельно изображение?</p>
<p>Вот с круглыми изображениями лучше работать стилями. Во-первых, в примере выше — явно контентное изображение, показывающее конкретный товар. Во-вторых, сделать это стилями несложно: <code>border-radius: 50%;</code> — и всё точно так же, но при этом картинка будет в формате JPG, который лучше подходит для полноцветных контентных изображений, а не PNG, который пришлось бы использовать для прозрачности.</p>
<figure>
<img src="../media/file37.png" alt="Пример выгрузки изображения без кадрирования с помощью маски в Фигме" />
<figcaption aria-hidden="true">Пример выгрузки изображения без кадрирования с помощью маски в Фигме</figcaption>
</figure>
<p>Но бывают же маски, изображения с которыми лучше выгружать вместе? Да.</p>
<p>Например, те, которые собственно кадрируют изображение под макет, которые стилизуют и украшают изображение. В таком случае выгружается целиком масочная группа.</p>
<figure>
<img src="../media/file38.png" alt="Пример изображения, которое явно нужно выгружать с маской" />
<figcaption aria-hidden="true">Пример изображения, которое явно нужно выгружать с маской</figcaption>
</figure>
<p>Если ситуация не слишком очевидная, можно маску отключить и посмотреть, что у вас получится без неё. Для этого можно нажать на глазик в панели слоёв, чтобы он «закрылся». И пока маска не видна, вы увидите, что именно она делает и насколько нужна на конечном изображении, которое вы встроите в сайт.</p>
<figure>
<img src="../media/file39.png" alt="Отключение маски в панели слоёв" />
<figcaption aria-hidden="true">Отключение маски в панели слоёв</figcaption>
</figure>
<p>Но бывает и хитрее. Например, когда слоёв с масками больше одного и они образуют своего рода торт.</p>
<p>В примере масочная группа с молодым человеком и его комплекс стилей лежит отдельно, а тёмный градиентный круг — отдельно. Но выгружать их нужно вместе, потому что это контентное изображение, а делать многослойность там, где можно не усложнять — плохая идея.</p>
<figure>
<img src="../media/file40.png" alt="Молодой человек и его тёмные круги" />
<figcaption aria-hidden="true">Молодой человек и его тёмные круги</figcaption>
</figure>
<p>Что же делать? Искать все части нашего шедевра, зажимать Ctrl/Cmd, выбирать все компоненты нашей иллюстрации, нажимать <em>Group Selection</em>, и потом выгружать группу одним изображением.</p>
<figure>
<img src="../media/file41.png" alt="Объединение элементов в группу" />
<figcaption aria-hidden="true">Объединение элементов в группу</figcaption>
</figure>
<p>А бывают ситуации наоборот, когда каких-то масок не хватает, и вы можете их создать. Например, у вас интернет-магазин, и в нём целая куча однотипных карточек. У этих карточек есть контентная картинка и какой-то смысловой блок. На макете все картинки в формате PNG с прозрачным фоном и все — разного размера. Можно наложить на все них маски одинакового размера, чтобы потом выгрузить все одинаковые и не стилизовать каждую отдельную картинку в однотипных элементах.</p>
<p>Как создать маску? Нужно наверху в панели инструментов выбрать инструмент <em>Rectangle</em> (или использовать горячую клавишу R) и нарисовать прямоугольник правильного размера. Поместить его под слой с изображением, на которое накладываем маску. Если необходимо, можно переместить прямоугольник, чтобы в маску попала интересующая область изображения. Затем выделить слой с изображением и прямоугольником и на верхней панели выбрать команду <em>Use as Mask</em>.</p>
<figure>
<img src="../media/file42.png" alt="Создание маски" />
<figcaption aria-hidden="true">Создание маски</figcaption>
</figure>
<p>Готово! У нас есть маска. Как с ней работать — вы знаете.</p>
<figure>
<img src="../media/file43.png" alt="Результат выполнения команды Use as Mask" />
<figcaption aria-hidden="true">Результат выполнения команды <em>Use as Mask</em></figcaption>
</figure>
<p>Может сложиться впечатление, что маски — это только прямоугольники, но это далеко не так. Маской может быть любая фигура. В качестве маски может использоваться даже текст.</p>
<figure>
<img src="../media/file44.png" alt="Использование текста для маски" />
<figcaption aria-hidden="true">Использование текста для маски</figcaption>
</figure>
</section>
<section id="экспорт-узора-для-заливки" class="level4" data-number="1.12.4.2">
<h4 data-number="1.12.4.2">Экспорт узора для заливки</h4>
<p>Как правило, дизайнеры добавляют к макету образец узора для заливки. Но если вам не повезло и дизайнер не добавил образец, получить необходимое изображение всё равно несложно.</p>
<p>Заливка бесшовным узором относится к приёмам, так называемого, <em>скевоморфизма</em> — техники дизайна, при которой элементы дизайна скопированы с формы другого объекта. Это устаревший тип дизайна, в котором дизайн используется ради дизайна, а не ради контента. С 2015 года <em>Flat Design</em> практически полностью вытеснил приёмы <em>скевоморфизма</em>. Несмотря на это, данная техника крепко осела в головах заказчиков и до сих пор используется на некоторых сайтах.</p>
<p>Для начала определим, какое изображение используется для заливки. У данного изображения режим заполнения (свойство <em>Fill</em>) установлен в значении <em>Tile</em>. Режим <em>Tile</em> используется для заполнения фигуры повторяемыми фрагментами — бесшовными паттернами. Обычно они нарисованы так, что если их размножить и поставить вплотную друг к другу, швы между ними будут незаметны. В нашем случае — это изображение с названием <em>Паттерн</em>. Когда мы развернём всплывающее окно, нажав на свойство <em>Fill</em>, повторяющийся фрагмент узора будет выделен маркерами синего цвета, также будут отображены размеры фрагмента узора.</p>
<figure>
<img src="../media/file45.png" alt="Определяем узор для заливки" />
<figcaption aria-hidden="true">Определяем узор для заливки</figcaption>
</figure>
<p>Создаём дубликат слоя с узором (Ctrl+D/Cmd+D). Затем устанавливаем размеры слоя равными размеру повторяющегося фрагмента узора, то есть 600Х600. И экспортируем полученный слой в формате PNG. Узор получен. Далее с помощью CSS-свойства <code>background-repeat: repeat;</code> заливаем фон полученным узором.</p>
<p>Как выглядит CSS:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode css"><code class="sourceCode css"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="fu">.section</span> {</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">background-image</span>: <span class="fu">url(</span><span class="st">&quot;../img/pattern.png&quot;</span><span class="fu">)</span><span class="op">;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">background-repeat</span>: <span class="dv">repeat</span><span class="op">;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
</section>
</section>
</div>
</section>
</section>
</body>
</html>
